# Prompt
# export PS1='\w\$ '

# if [[ -s /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh ]]; then
#   source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
#   export PS1='\w\$$(__git_ps1) '
# fi

# Paths
export PATH=/usr/local/bin:/usr/local/sbin:$PATH:/Users/hari/Library/Developer/android-ndk-r10d:/Applications/adt-bundle/android-sdk-macosx/platform-tools:/usr/local/apache-ant-1.9.4/bin
export NDK_ROOT=/Users/hari/Library/Developer/android-ndk-r10d
export PATH="$PATH:/Applications/adt-bundle/android-sdk-macosx/platform-tools"
export PATH="$PATH:/Applications/adt-bundle/android-sdk-macosx/build-tools"
export PATH="$PATH:/Applications/adt-bundle/android-sdk-macosx/tools"
export NDK_MODULE_PATH="/Users/hari/Documents/cocos2d-x-2.1.5"
export ANDROID_HOME="/Applications/adt-bundle/android-sdk-macosx"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export ANT_ROOT=/usr/local/apache-ant-1.9.4/bin
export JAVA_HOME=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
# Add environment variable COCOS_CONSOLE_ROOT for cocos2d-x
export COCOS_CONSOLE_ROOT=/Users/hari/Downloads/cocos2d-js-v3.1/tools/cocos2d-console/bin
export PATH=$COCOS_CONSOLE_ROOT:$PATH
# Add environment variable ANDROID_SDK_ROOT for cocos2d-x
export ANDROID_SDK_ROOT=/Applications/adt-bundle/android-sdk-macosx
export PATH=$ANDROID_SDK_ROOT:$PATH
export PATH=/Users/hari/Library/Developer/flow:$PATH
export PATH=$ANDROID_SDK_ROOT/tools:$ANDROID_SDK_ROOT/platform-tools:$PATH
# Add environment variable COCOS_TEMPLATES_ROOT for cocos2d-x
export COCOS_TEMPLATES_ROOT=/Users/hari/Downloads/cocos2d-x-3.4/templates
export PATH=$COCOS_TEMPLATES_ROOT:$PATH


# Override git-config "core.editor" to enforce vim when using SSH
if test -n "$SSH_CONNECTION"; then
  export GIT_EDITOR='vim'
fi

#export EDITOR='subl -w'

# Shell
alias reload='(source $HOME/.bash_profile && echo "sourced $HOME/.bash_profile") || echo "Could not source $HOME/.bash_profile"'
alias la='ls -lah'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias doc="cd ~/Documents"
alias h="history"

# Portable ls with colors
if ls --color -d . >/dev/null 2>&1; then
  alias ls='ls --color=auto'  # Linux
elif ls -G -d . >/dev/null 2>&1; then
  alias ls='ls -G'  # BSD/OS X
fi

# IP addresses
alias localip="ipconfig getifaddr en0"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Ruby
alias be='bundle exec'

# Rails
#alias r='rails'
alias tdev='tail -n 90 -f log/development.log'
alias ttest='tail -n 90 -f log/test.log'
#alias g='be guard'
alias rst='touch tmp/restart.txt && echo touched tmp/restart.txt'

# Applications
function m {
  if [ -z "$1" ]
  then
    subl .
  else
    subl $1
  fi
}

function o {
  if [ -z "$1" ]
  then
    open .
  else
    open $1
  fi
}

function repeat {
  while sleep 2; do
    $@
  done
}

# System
alias hosts='sudo subl /etc/hosts'
alias sshconf='subl ~/.ssh/config'
alias keys="open ~/.ssh"
alias online="ping -c 1 www.google.com &> /dev/null && echo 'Online :)' || echo 'Offline :('"
alias gogo="~/.biosphere/spheres/halo/go/bin/go-google-authenticator"

function sshkey {
  if [ -z "$1" ]
  then
    echo "USAGE: sshkey mykeyname"
  else
    ssh-keygen -t rsa -N '' -f ~/.ssh/$1
    cat ~/.ssh/$1.pub | pbcopy
    echo
    echo "Generated key ~/.ssh/$1 and copied the public key to the clipboard."
    echo
  fi
}

function diffx {
  `/Applications/Xcode.app/Contents/Applications/FileMerge.app/Contents/MacOS/FileMerge -left $1 -right $2`
}

function defs {
  defa; sleep 2; defb
}

function defa {
  defaults read > /tmp/defaults_a
}

function defb {
  defaults read > /tmp/defaults_b
  diff /tmp/defaults_a /tmp/defaults_b
}

# Projects
alias cg="cd /Users/hari/Documents/Work/cricketgold"
alias tpw="cd /Users/hari/Documents/Work/teenpattiweb"
alias tpg="cd /Users/hari/Documents/cocos2d-x-2.1.5/projects/teenpatti"

# Git
alias ga='git add'
alias gaa='git add --all'
alias gam="git commit --amend"
alias gb="git branch"
alias gc="git commit -v"
alias gco="git checkout"
alias gcp="git cherry-pick"
alias gd="git diff"  # What's changed but not yet added?
alias gdc="git diff --cached"  # What's added but not yet committed?
alias gdcm="git diff --cached | subl"
alias gdm="git diff | subl"
alias gg='git grep'
alias gl="git pull --rebase"
alias gm='git merge'
alias gp='git push'
alias gpp='git pull --rebase && git push'
alias gr='git remote show origin'
alias gs="git status"
alias gt='git tag'
alias gu='git unstage'

if [[ -s /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash ]]; then
  source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash
fi

function guser {
  if [ -z "$1" ]
  then
  echo "Current git configuration:"
    git config --get user.name
    git config --get user.email
  else
    echo "New git configuration:"
    git config user.name $1
    git config user.email $2
    git config --get user.name
    git config --get user.email
  fi
}

function ghalo {
  guser halo $(echo "Z2l0aHViQHBvc3Rlby5vcmc=" | openssl enc -d -base64)
}

source $HOME/.bash_prompt
# Local bin directory takes highest precedence
# export PATH="bin:$PATH"
